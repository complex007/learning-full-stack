{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/display-editors/display-editors.component.css","webpack:///./src/app/components/editor/display-editors/display-editors.component.html","webpack:///./src/app/components/editor/display-editors/display-editors.component.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/nav-bar/nav-bar.component.css","webpack:///./src/app/components/nav-bar/nav-bar.component.html","webpack:///./src/app/components/nav-bar/nav-bar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/pipes/search.pipe.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/input.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { routing } from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component'\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { EditorComponent } from './components/editor/editor.component';\nimport { SearchPipe } from './pipes/search.pipe';\nimport { DisplayEditorsComponent } from './components/editor/display-editors/display-editors.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavBarComponent,\n    EditorComponent,\n    SearchPipe,\n    DisplayEditorsComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nconst routes : Routes = [\n    {\n        path: \"\",\n        redirectTo: \"problems\",\n        pathMatch: \"full\"\n    },\n    {\n        path: \"problems\",\n        component: ProblemListComponent\n    },\n    {\n        path: \"problems/:id\",\n        component: ProblemDetailComponent\n    },\n    {\n        path: \"**\",\n        redirectTo: \"problems\"\n    }\n\n]\nexport const routing = RouterModule.forRoot( routes );","module.exports = \".editor-ui{\\n    background-color: #4CAF50;\\n    width:60px;\\n    margin: 2px 3px 2px 3px;\\n}\\n#display-editor{\\n    display: flex;\\n    flex-direction: row;\\n}\"","module.exports = \"<label> Editing Users:</label>\\n    \\n<div id=\\\"display-editor\\\">\\n       \\n        <div *ngFor=\\\"let editor of editors\\\" >\\n                <span class=\\\"badge editor-ui\\\">user-{{editor.substring(0,1)}}</span>\\n        </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CollaborationService } from '../../../services/collaboration.service';\n\n\n@Component({\n  selector: 'app-display-editors',\n  templateUrl: './display-editors.component.html',\n  styleUrls: ['./display-editors.component.css']\n})\nexport class DisplayEditorsComponent implements OnInit {\n  subscriptionEditors: Subscription;\n  editors:string[];\n  constructor( private collaboration: CollaborationService ) { }\n\n  ngOnInit() {\n    this.getEditors();\n    \n  }\n  ngOnDestroy() {\n    this.subscriptionEditors.unsubscribe();\n    \n  }\n  getEditors():void{\n    this.subscriptionEditors = this.collaboration.getEditors()\n    .subscribe(editors=>{\n      this.editors = editors;\n    });\n  }\n\n}\n","module.exports = \"@media screen {\\n    #editor{\\n        height:600px;\\n        width:100%;\\n       \\n    }\\n    #header-content{\\n        display:flex;\\n        flex-direction: row;\\n        margin: 10px 0 10px 0;\\n    }\\n    #header-content select{\\n        width: 70px;\\n\\n    }\\n    .output-info{\\n        border:solid;\\n    }\\n}\"","module.exports = \"<section>\\n  <app-display-editors></app-display-editors>\\n    <header class=\\\"editor-header\\\">\\n      <div class=\\\"row\\\">\\n        <div id=\\\"header-content\\\">\\n            <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\" \\n            [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n              <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n                {{language}}\\n              </option>\\n            </select>\\n            <!--reset button -->\\n            <!-- Button trigger modal -->\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n              Reset\\n            </button>\\n        </div>\\n        \\n  \\n        <!-- Modal -->\\n        <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                You will lose current code in the editor, are you sure?\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\n                (click)=\\\"resetEditor()\\\">Reset</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </header>\\n  \\n    <div id=\\\"editor\\\">\\n    </div><!-- This is the body -->\\n    <div class=\\\"output-info\\\">\\n      <span>{{output}}</span>\\n    </div>\\n    <footer class=\\\"editor-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" \\n        (click)=\\\"submit()\\\">Submit Solution</button>\\n    </footer>\\n</section>\\n\\n\"","import { Component, OnInit } from '@angular/core'; \nimport { CollaborationService }from '../../services/collaboration.service';\nimport { ActivatedRoute, Params} from '@angular/router'\nimport { DataService }from '../../services/data.service';\ndeclare var ace: any;  //already this ace is created inside script in angular.json , will be included in index.js\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  public languages: string[] = [\"Java\",\"Python\"];\n  editor: any;\n  output: string;\n  defaultContent = {\n    'Java':`public class Example{\n      public static void main(string[] args){\n        // type your code\n      }\n    }\n    `// ` support mutiple lines string\n    ,'Python':`class Solution:\n    def example();\n      # Write your Python code here\n    `\n  }\n  language:string = 'Java';\n  sessionId:string;\n\n  constructor( private collaboration:CollaborationService , \n              private route:ActivatedRoute,\n              private dataService: DataService) { }\n\n  ngOnInit() {\n    \n    this.route.params.subscribe(params=>{\n      this.sessionId = params['id'];\n      this.initEditor();\n      this.collaboration.restoreBuffer();\n\n    })\n\n  }\n  initEditor(): void{\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    this.resetEditor();\n    document.getElementsByTagName('textarea')[0].focus();// focus on a certain area\n    this.collaboration.init(this.editor,this.sessionId);// keep clients editing same problem in same session\n    this.editor.lastAppliedChange = null;\n    this.editor.on(\"change\",(e)=>{\n      if (this.editor.lastAppliedChange != e){  // many changes are same if avoid dead loop \n        this.collaboration.change(JSON.stringify(e));\n      }\n    });\n\n  \n\n  }\n\n  ngOnDestroy(){\n    this.collaboration.closeSocket();\n  }\n\n  \n  setLanguage(language:string): void {\n    this.language = language;\n    this.resetEditor();\n\n  }\n  resetEditor(): void{\n    this.editor.setValue(this.defaultContent[this.language]);\n    this.editor.getSession().setMode(\"ace/mode/\"+this.language.toLowerCase());\n\n  }\n  submit(): void{\n    let code = this.editor.getValue();\n    this.dataService.buildAndRun(code)\n    .then(data =>{\n      this.output = data;\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <!-- Brand and toggle get grouped for better mobile display -->\\n      <div class=\\\"navbar-header\\\">\\n        <span class=\\\"navbar-brand\\\">{{title}}</span>\\n      </div>\\n  \\n      <!-- Collect the nav links, forms, and other content for toggling -->\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li><a [routerLink]=\\\"['/problems']\\\">List</a></li>\\n        </ul>\\n        <form class=\\\"navbar-form navbar-left\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" type=\\\"search\\\" class=\\\"form-control\\\" [formControl]=\\\"searchBox\\\" placeholder=\\\"Search\\\">\\n          </div>\\n        </form>\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <li><a [routerLink]=\\\"['/bookmark']\\\">Bookmark</a></li>\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              <span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li><a [routerLink]=\\\"['/profile']\\\">My Profile</a></li>\\n              <li><a [routerLink]=\\\"['/grade']\\\">Grade: Level 1</a></li>\\n              <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n              <li><a [routerLink]=\\\"['/logout']\\\">Log Out</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n      </div> \\n    </div>\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport { Router } from '@angular/router';\nimport { InputService } from '../../services/input.service'\nimport { debounceTime } from 'rxjs/Operators'\n\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  title:string;\n  searchBox:FormControl = new FormControl();\n  subscription:Subscription;\n\n  constructor( private input: InputService, private router: Router) { }\n\n  ngOnInit() {\n    this.title = \"Forerror\";\n    this.subscription = this.searchBox\n                        .valueChanges\n                        .pipe(debounceTime(200))\n                        .subscribe(term=>{\n                          this.input.changeInput(term);\n                        })\n\n  }\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n        <form #formRef = \\\"ngForm\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"problemName\\\">Problem name</label>\\n            <input name = \\\"problemName\\\" id=\\\"problemName\\\" class=\\\"form-control\\\"\\n              type=\\\"text\\\" required placeholder=\\\"Please enter problem name\\\" \\n              [(ngModel)] = \\\"newProblem.name\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"problemDesc\\\">problem description</label>\\n            <textarea name = \\\"problemDesc\\\" id=\\\"problemDesc\\\" class=\\\"form-control\\\"\\n             placeholder=\\\"Please enter problem description\\\" \\n              [(ngModel)] = \\\"newProblem.desc\\\" rows=\\\"3\\\">\\n            </textarea>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n             <label for=\\\"problemDifficulty\\\">Difficulty</label> \\n             <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n             [(ngModel)] = \\\"newProblem.difficulty\\\">\\n              <option *ngFor = \\\"let difficulty of difficulties\\\" [value] = \\\"difficulty\\\">\\n                {{difficulty}}\\n              </option>\\n             </select>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class = \\\"col-md-12\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\"\\n                (click) = \\\"addProblem()\\\"\\n              > Add problem </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <br/>\\n      <br/>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\nconst DEFAULT_PROBLEM:Problem = Object.freeze ({\n  id:0,\n  name:'',\n  desc:'',\n  difficulty:''\n});\n\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem : Problem = Object.assign({},DEFAULT_PROBLEM);\n  difficulties : string[] = ['easy','medium','hard','super'];\n  constructor( private dataService: DataService ) { }\n  ngOnInit() {\n  }\n  addProblem( ){\n    this.dataService.addProblem(this.newProblem)\n    .catch(error=>{\n      console.log(error);\n    });\n    this.newProblem = Object.assign({},DEFAULT_PROBLEM);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div>\\n    <div class=\\\"col-sm-12 col-md-4\\\" >\\n      <h2>\\n        {{problem.id}}.{{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n    </div>\\n    <div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n      <app-editor></app-editor>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { Problem } from '../../models/problem.model';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n\n  constructor( private dataService: DataService, private route: ActivatedRoute ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.dataService.getProblem(+params['id'])\n      .then( problem =>this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".difficulty{\\n    min-width: 65px;\\n    margin-right: 10px;\\n}\\n.label.difficulty{   \\n    padding-top: 0.6em;\\n    color: #fbfdfa;\\n    font-size: 12px;\\n}\\n.title{\\n    font-size: 1.2em;\\n}\\n.diff-easy{\\n    background-color: #42ebf4;\\n}\\n.diff-medium{\\n    background-color: #92cf5c;\\n}\\n.diff-hard{\\n    background-color: red;\\n}\\n.diff-super{\\n    background-color: purple;\\n}\"","module.exports = \"\\n\\n\\n<div class=\\\"container\\\">\\n  \\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of (problems|search:searchTerm)\\\" \\n    [routerLink]=\\\"['/problems',problem.id]\\\">\\n      <span class=\\\"{{'pull-left label difficulty diff-'+problem.difficulty.toLocaleLowerCase()}}\\\">\\n          {{problem.difficulty}}\\n      </span>\\n      <strong class=\\\"title\\\">{{problem.id}}.{{problem.name}}</strong>\\n    </a>\\n\\n  </div>\\n  <div class=\\\"container\\\">\\n      <app-new-problem>\\n        \\n      </app-new-problem>\\n    \\n    </div>\\n\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service' ;\nimport { Subscription } from 'rxjs';\nimport { InputService } from '../../services/input.service'\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n\n  subscriptionSearch: Subscription;\n  searchTerm: string = '';\n\n  constructor(private dataService: DataService, private input: InputService ) { }\n\n  ngOnInit() {\n    this.getProblems();\n    this.getInput();\n  }\n  ngOnDestroy(){\n    this.subscriptionProblems.unsubscribe();\n    this.subscriptionSearch.unsubscribe();\n  }\n  getProblems(): void{\n    this.subscriptionProblems = this.dataService.getProblems().subscribe(problems=>this.problems=problems)\n  }\n  getInput():void{\n    this.subscriptionSearch = this.input.getInput().subscribe(term=>this.searchTerm = term);\n  }\n\n\n\n  //  | is pipe. a | b ,a ,b is the params of the pipe function\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Problem } from '../models/problem.model'\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(problems: Problem[], term: string): any {\n    return problems.filter(pros=>pros.name.toLowerCase().includes(term));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable,BehaviorSubject } from 'rxjs'\n\ndeclare var io:any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n  collaborationSocket:any;\n  private collaborationInfo = new BehaviorSubject([]);\n\n  constructor() { }\n  init(editor:any,sessionId:string): void{\n    this.collaborationSocket = io(window.location.origin,\n      {query:'sessionId='+sessionId});\n      \n    this.collaborationSocket.on('collaboration-info', collaboration=>{\n      console.dir(collaboration);\n      this.changeEditors(collaboration);\n    })\n   \n\n  \n    this.collaborationSocket.on('change',(delta:string)=>{\n      console.log(\"collobration: editor changed by \"+ delta);\n      delta = JSON.parse(delta);\n      editor.lastAppliedChange = delta;\n      editor.getSession().getDocument().applyDeltas([delta]);\n    });\n  }\n  change(delta:string): void {\n    this.collaborationSocket.emit('change',delta);// send change to server\n  }\n\n  restoreBuffer():void{\n    this.collaborationSocket.emit('restoreBuffer');\n  }\n\n  closeSocket():void{\n    this.collaborationSocket.disconnect();\n  }\n\n  changeEditors( editors:string[] ):void{\n    this.collaborationInfo.next(editors);\n  }\n  getEditors(): Observable<string[]>{\n    return this.collaborationInfo.asObservable();\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable , BehaviorSubject } from 'rxjs';\n\n// .. => one level higher in file system\n// . => current level\n\n@Injectable({\n  providedIn: 'root'// providedIn: the access of this service. root => all components can use it\n})\nexport class DataService {\n  private _problemSource = new BehaviorSubject<Problem[]>([]); // private method using _xxx. behaviorsubject always has a init value\n\n\n  constructor( private httpClient: HttpClient ) {  }\n  // constructor => languare provides\n  // ngOninit => angular provides\n\n  // === => don't convert type, compare type and value\n  \n// npm start => for all common node program. ng serve => specific to angular\ngetProblems():Observable<Problem[]> {\n   this.httpClient.get('api/v1/problems')\n   .toPromise()\n   .then((res:any)=>{  // any means any type\n     this._problemSource.next(res);\n   })\n   .catch(this.handleError);\n   return this._problemSource.asObservable();\n\n}\ngetProblem(id:number):Promise<Problem> {\n  return this.httpClient.get(`api/v1/problems/${id}`)\n  .toPromise()\n  .then((res:any)=>res)\n  .catch(this.handleError);\n}\n\naddProblem( problem: Problem ){\n  const options = {headers: new HttpHeaders({'Content-Type':'application/json'}) }\n  return this.httpClient.post('api/v1/problems',problem,options)\n  .toPromise()\n  .then((res:any)=>{\n    this.getProblems();\n    return res;\n  })\n  .catch(this.handleError);\n}\nbuildAndRun( code: string ): Promise<string> {\n  return this.httpClient.post('api/v1/build_and_run',{code:code})\n  .toPromise()\n  .then((res:any)=>{\n    return res.status;\n  })\n  .catch(this.handleError);\n}\n\nprivate handleError(error:any):Promise<any>{\n    return Promise.reject(error.error||error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable,BehaviorSubject } from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputService {\n  //use service to pass data across components\n  // no need to forcely pass data via components data binding\n\n  // like a database, temporally store data\n\n\n  private inputSubject$ = new BehaviorSubject('');\n\n\n  constructor() { }\n\n  changeInput( term:string ):void{\n    this.inputSubject$.next(term);\n  }\n\n  getInput(): Observable<string>{\n    return this.inputSubject$.asObservable();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}